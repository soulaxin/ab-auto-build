buildscript {
    repositories {
        mavenLocal()
        jcenter()
    }

    dependencies {
//    classpath 'org.akhikhl.wuff:wuff-plugin:+'

        classpath "org.akhikhl.unpuzzle:unpuzzle-plugin:0.0.22"
        classpath "commons-configuration:commons-configuration:1.10"

//        def dir = new File(projectDir, 'wuff/libs/wuff-plugin/build')
//        def clazz = new File(dir, 'classes/main')
//        def resource = new File(dir, 'resources/main')
//        classpath files(clazz, resource)

        def wuff_plugins = new File(projectDir, 'plugins')
        classpath files(new File(wuff_plugins, 'wuff-plugin-0.0.20.1.jar'))

        classpath "se.bjurr.gitchangelog:git-changelog-gradle-plugin:+"
    }
}

def product_list = ['abc', 'abs']
def eclipse_bundles = ['cn.com.agree.cocktail', 'cn.com.agree.ab.a4.client.gui.adore']

subprojects {
    repositories {
        mavenLocal()
        jcenter()
    }

    apply plugin: 'java'

    // JVM 版本号要求
    sourceCompatibility = 1.7
    targetCompatibility = 1.7

    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
    if (product_list.contains(project.name)) {
        apply plugin: "se.bjurr.gitchangelog.git-changelog-gradle-plugin"
        apply from: new File(rootDir, 'changelog.gradle')
        return
    }
    if (eclipse_bundles.contains(name)) {
        apply plugin: 'org.akhikhl.wuff.eclipse-bundle'
    } else {
        apply plugin: 'org.akhikhl.wuff.osgi-bundle'
    }

    wuff {
        selectedEclipseVersion = '4.3.2'
    }
    if (name == 'cn.com.agree.ab.a4.client') {
        def sourcePath = 'src/cn/com/agree/ab/a4/client/'
        def targetPath = 'cn/com/agree/ab/a4/client/'
        def sourceSplash = 'splash_online.png'
        def source = sourcePath + sourceSplash
        jar {
            from(source) {
                into targetPath
            }
        }
    }

    if (name == 'cn.com.agree.commons.csv' || name == 'cn.com.agree.ab.a4.pub.extension.eclipse') {
        dependencies {
            compile project(':org.apache.log4j')
        }
    }

    if (name == 'cn.com.agree.adore2') {
        afterEvaluate {
            def dependencies = project.configurations.getByName('compile').dependencies
            def dep = dependencies.find { it.version == "1.1.50.android" }
            dependencies.remove(dep)
        }
    }

    if (name == 'cn.com.agree.ab.a4.client.web' || name == 'cn.com.agree.ab.a4.server.web') {
        afterEvaluate {
            project.dependencies.add 'compile', "${eclipseMavenGroup}:org.eclipse.jetty.security:+"
            project.dependencies.add 'compile', "${eclipseMavenGroup}:javax.el:+"
        }
    }

    if (name == 'cn.com.agree.ab.a4.server') {
        afterEvaluate {
            project.dependencies.add 'compile', "${eclipseMavenGroup}:org.eclipse.update.configurator:+"
        }
    }

    if (name == 'cn.com.agree.cocktail') {
        jar {
            from('src/cn/com/agree/cocktail/client.gif') {
                into 'cn/com/agree/cocktail'
            }
        }
    }

    if (name == 'cn.com.agree.commons.logging') {
        jar {
            from('src/commons-logging.properties') {
                into ''
            }
        }
    }

    if (name == 'cn.com.agree.international') {
        jar {
            from('src/cn/com/agree/international') {
                include '*.properties'
                into 'cn/com/agree/international'
            }
        }
    }
}